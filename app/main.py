from dataset.operation import TransformNormalize, Preprocessing
from dataset.transform import Transform, TransformEnum
from dataset.normalize import Normalize, NormalizeEnum
from dataset.valid.row import RowValid, RowValidEnum


def doRun(save_file: str, name_file: str, actions: list[TransformNormalize], remove_rows: list[RowValid]):
    preprocessing = Preprocessing(
        name_file=name_file,
        save_file=save_file,
        actions=actions,
        remove_rows=remove_rows,
    )
    # TODO: implement the rule to remove the rows
    preprocessing.transform()
    preprocessing.normalize()
    preprocessing.save()


if __name__ == "__main__":
    actions = [
        TransformNormalize(
            column="GRAIN_YIELD:(t/ha):avg",
            transform=Transform(transformEnum=TransformEnum.PASS),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE),
        ),
        TransformNormalize(
            column='SOWING_DATE:(date)',
            transform=Transform(transformEnum=TransformEnum.FORCE_ONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.PASS),
        ),
        TransformNormalize(
            column='AREA_HARVESTED_BED_PLOT_M2:(m2)',
            transform=Transform(transformEnum=TransformEnum.FILL_AVG),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE),
        ),
        TransformNormalize(
            column='AREA_SOWN_BED_PLOT_M2:(m2)',
            transform=Transform(TransformEnum.FILL_AVG),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='BIRD_DAMAGE:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='EMERGENCE:(E/N/L)',
            transform=Transform(TransformEnum.STR_NORMAL),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='HARVEST_STARTING_DATE:(date)',
            transform=Transform(TransformEnum.DATE_FROM,
                                column_base="SOWING_DATE:(date)"),
            normalize=Normalize(normalizeEnum=NormalizeEnum.PASS)
        ),
        TransformNormalize(
            column='EMERGENCE_DATE:(date)',
            transform=Transform(TransformEnum.DATE_FROM,
                                column_base="SOWING_DATE:(date)"),
            normalize=Normalize(normalizeEnum=NormalizeEnum.PASS)
        ),
        TransformNormalize(
            column='FERTILIZER_%K2O_1:(%)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='FERTILIZER_%N_1:(%)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='FERTILIZER_%P2O5_1:(%)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='FERTILIZER_1:(date)',
            transform=Transform(TransformEnum.DATE_FROM,
                                column_base="SOWING_DATE:(date)"),
            normalize=Normalize(normalizeEnum=NormalizeEnum.PASS)
        ),
        TransformNormalize(
            column='FOLIAR_DISEASE_DEVELOPMENT:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='FROST_DAMAGE_SPIKE:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='HAIL_DAMAGE:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='HERBICIDE_DAMAGE:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='HERBICIDE:(Y/N)',
            transform=Transform(TransformEnum.STR_NO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='IRRIGATED:(Y/N)',
            transform=Transform(TransformEnum.STR_NO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='INSECT_DAMAGE:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='LODGING:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='LODGING:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='NO_OF_ROWS_HARVESTED:(integer)',
            transform=Transform(TransformEnum.FILL_AVG),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='NO_OF_ROWS_SOWN:(integer)',
            transform=Transform(TransformEnum.FILL_AVG),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='NUMBER_POST_SOWING_IRRIGATIONS:(integer)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='NUMBER_PRE_SOWING_IRRIGATIONS:(integer)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_MONTH_OF_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_1ST_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_2ND_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_3RD_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_4TH_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_5TH_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_6TH_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_7TH_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_8TH_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_9TH_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_10TH_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PPN_11TH_MO_BEFORE_HARVESTED:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PRE_SOWING_IRRIGATION:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='PRECIPITATION_FROM_SOWING_TO_MATURITY:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='ROOT_DISEASE_DEVELOPMENT:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='SOIL_ALUMINIUM_TOXICITY:(Y/N)',
            transform=Transform(TransformEnum.STR_NO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='SPIKE_DISEASE_DEVELOPMENT:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='TOTAL_PRECIPIT_IN_12_MONTHS:(mm)',
            transform=Transform(TransformEnum.FILL_AVG),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='WEED_PROBLEM:(N/T/S/M/V)',
            transform=Transform(TransformEnum.STR_NONE),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_TO_ONE)
        ),
        TransformNormalize(
            column='YIELD_FACTOR:(real)',
            transform=Transform(TransformEnum.FILL_AVG),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='IRRIGATION_AFTER_SOWING:(mm)',
            transform=Transform(TransformEnum.FILL_CERO),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        ),
        TransformNormalize(
            column='SOIL_ROOT_BARRIER:(Y/N/U)',
            transform=Transform(TransformEnum.STR_UNKNOWN),
            normalize=Normalize(normalizeEnum=NormalizeEnum.ONE_POSITIVE)
        )
    ]

    remove_rows = [RowValid(column="GPS Altitude:(integer)",
                            valid=RowValidEnum.VALUE_OR_REMOVE)]

    doRun(
        save_file='test.csv',
        name_file='./origin_test.csv',
        actions=actions,
        remove_rows=remove_rows,
    )
